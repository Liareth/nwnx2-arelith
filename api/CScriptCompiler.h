#ifndef _CSCRIPTCOMPILER_H_
#define _CSCRIPTCOMPILER_H_
#include "nwndef.h"
#include "CExoString.h"

class CScriptCompiler
{
public:
    int AddStructureToStack(CExoString const &, int);
    int AddSymbolToLabelList(int, int, int, int);
    int AddSymbolToQueryList(int, int, int, int);
    int AddToGlobalVariableList(CScriptParseTreeNode *);
    int AddToSymbolTableVarStack(int, int, int);
    int AddUserDefinedIdentifier(CScriptParseTreeNode *, int);
    int AddVariableToStack(int, CExoString *, int);
    int CheckForBadLValue(CScriptParseTreeNode *);
    int CleanUpAfterCompile(int, CScriptParseTreeNode *);
    int CleanUpAfterCompiles();
    int CleanUpDuringCompile(int);
    int ClearAllSymbolLists();
    int ClearCompiledScriptCode();
    int ClearSwitchLabelList();
    int ClearUserDefinedIdentifiers();
    int CompileFile(CExoString const &);
    int CompileScriptChunk(CExoString const &);
    int CompileScriptConditional(CExoString const &);
    int CreateScriptParseTreeNode(int, CScriptParseTreeNode *, CScriptParseTreeNode *);
    int DeleteCompileStack();
    int DeleteParseTree(int, CScriptParseTreeNode *);
    int DeleteScriptParseTreeNode(CScriptParseTreeNode *);
    int DetermineLocationOfCode();
    int DuplicateScriptParseTree(CScriptParseTreeNode *);
    int EndLineNumberAtBinaryInstruction(int, int, int);
    int FinalizeFinalCode();
    int FoundReturnStatementOnAllBranches(CScriptParseTreeNode *);
    int GenerateCodeForSwitchLabels(CScriptParseTreeNode *);
    int GenerateDebuggerTypeAbbreviation(int, CExoString);
    int GenerateFinalCodeFromParseTree(CExoString);
    int GenerateIdentifierList();
    int GenerateIdentifiersFromConstantVariables(CScriptParseTreeNode *);
    int GenerateParseTree();
    int GetCompiledScriptCode(char **, int *);
    int GetFunctionNameFromSymbolSubTypes(int, int);
    int GetHashEntryByName(char const *);
    int GetIdentifierByName(CExoString const &);
    int GetNewScriptParseTreeNode();
    int GetStructureField(CExoString const &, CExoString const &);
    int GetStructureSize(CExoString const &);
    int HandleIdentifierToken();
    int HandleToken();
    int HashManagerAdd(unsigned long, unsigned long);
    int HashManagerDelete(unsigned long, unsigned long);
    int HashString(char const *);
    int HashString(CExoString const &);
    int InVisitGenerateCode(CScriptParseTreeNode *);
    int InitializeFinalCode();
    int InitializeIncludeFile(int);
    int InitializePreDefinedStructures();
    int InitializeSwitchLabelList();
    int Initialize();
    int InsertGlobalVariablesInParseTree(CScriptParseTreeNode *);
    int InstallLoader();
    int ModifySRStackReturnTree(CScriptParseTreeNode *);
    int OutputError(int, CExoString *, int, CExoString const &);
    int OutputIdentifierError(CExoString const &, int, int);
    int OutputWalkTreeError(int, CScriptParseTreeNode *);
    int ParseCharacterAlphabet(int);
    int ParseCharacterAmpersand(int);
    int ParseCharacterAsterisk(int);
    int ParseCharacterCarat(int);
    int ParseCharacterColon();
    int ParseCharacterComma();
    int ParseCharacterEllipsis();
    int ParseCharacterEqualSign(int);
    int ParseCharacterExclamationPoint(int);
    int ParseCharacterHyphen(int);
    int ParseCharacterLeftAngle(int);
    int ParseCharacterLeftBrace();
    int ParseCharacterLeftBracket();
    int ParseCharacterLeftSquareBracket();
    int ParseCharacterNumeric(int);
    int ParseCharacterPercentSign(int);
    int ParseCharacterPeriod();
    int ParseCharacterPlusSign(int);
    int ParseCharacterQuestionMark();
    int ParseCharacterQuotationMark();
    int ParseCharacterRightAngle(int);
    int ParseCharacterRightBrace();
    int ParseCharacterRightBracket();
    int ParseCharacterRightSquareBracket();
    int ParseCharacterSemicolon();
    int ParseCharacterSlash(int);
    int ParseCharacterTilde();
    int ParseCharacterVerticalBar(int);
    int ParseCommentedOutCharacter(int);
    int ParseFloatFromTokenString();
    int ParseIdentifierFile();
    int ParseNextCharacter(int, int);
    int ParseSource(char *, int);
    int ParseStringCharacter(int, int);
    int PopSRStack(int *, int *, int *, CScriptParseTreeNode **, CScriptParseTreeNode **);
    int PostVisitGenerateCode(CScriptParseTreeNode *);
    int PreVisitGenerateCode(CScriptParseTreeNode *);
    int PrintBinaryAddress();
    int PrintParseIdentifierFileError(int);
    int PrintParseSourceError(int);
    int PushSRStack(int, int, int, CScriptParseTreeNode *);
    int RemoveFromSymbolTableVarStack(int, int, int);
    int ResolveDebuggingInformationForIdentifier(int);
    int ResolveDebuggingInformation();
    int ResolveLabels();
    int SetAutomaticCleanUpAfterCompiles(int);
    int SetCompileConditionalFile(int);
    int SetCompileConditionalOrMain(int);
    int SetCompileDebugLevel(int);
    int SetCompileSymbolicOutput(int);
    int SetGenerateDebuggerOutput(int);
    int SetIdentifierSpecification(CExoString const &);
    int SetOptimizeBinaryCodeLength(int);
    int SetOutputAlias(CExoString const &);
    int ShutDown();
    int ShutdownIncludeFile(int);
    int StartLineNumberAtBinaryInstruction(int, int, int);
    int TestIdentifierToken();
    int Test_CompareDirectoryContents(CExoString &, CExoString &);
    int Test_CompareFileInclusion(CExoString &, CExoString &, CExoStringList *, unsigned short);
    int Test_CompileAllScriptsInDirectory(CExoString &, CExoString &, CExoString &);
    int TokenInitialize();
    int TraverseTreeForSwitchLabels(CScriptParseTreeNode *);
    int ValidateLocationOfIdentifier(CExoString const &);
    int WalkParseTree(CScriptParseTreeNode *);
    int WriteDebuggerOutputToFile(CExoString);
    int WriteFinalCodeToFile(CExoString const &);
    int WriteResolvedOutput();
    ~CScriptCompiler();
    CScriptCompiler();

};
#endif
